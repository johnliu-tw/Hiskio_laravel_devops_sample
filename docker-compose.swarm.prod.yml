version: "3.8"
services:
  api:
    image: ${API_IMAGE}
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role != manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 15s
    configs:
      - source: my_env_file
        target: /usr/src/.env
    depends_on:
      - update

  nginx:
    image: ${NGINX_IMAGE}
    deploy:
      placement:
        constraints:
          - node.role != manager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/posts"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 2m
    ports:
      - "80:80"
    depends_on:
      - api

  update:
    image: ${API_IMAGE}
    deploy:
      placement:
        constraints:
          - node.role == manager
    configs:
      - source: my_env_file
        target: /usr/src/.env

  redis:
    image: redis:7.0.11-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - type: volume
        source: redisdata
        target: /data

  scheduler:
    image: ${SCHEDULER_IMAGE}
    configs:
      - source: my_env_file
        target: /usr/src/.env
    depends_on:
      - update

  worker:
    image: ${WORKER_IMAGE}
    healthcheck:
      test: ["CMD", "php", "/usr/src/artisan", "queue:monitor", "default"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    configs:
      - source: my_env_file
        target: /usr/src/.env
    depends_on:
      - update

volumes:
  redisdata:

configs:
  my_env_file:
    external: true